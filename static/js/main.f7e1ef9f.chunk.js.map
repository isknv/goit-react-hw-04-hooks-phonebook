{"version":3,"sources":["componets/ImputForm/ImputForm.jsx","componets/Filter/Filter.jsx","componets/Contacts/Contacts.jsx","componets/App/App.jsx","index.js"],"names":["ImputForm","addContacts","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","trim","className","InputGroup","FormControl","type","title","required","value","onChange","target","Button","variant","Filter","filterContacts","Contacts","filter","contacts","removeContacts","contact","toLowerCase","includes","map","index","onClick","id","App","state","text","newContacts","uuidv4","alert","setState","prev","currentTarget","contactsStorage","localStorage","getItem","parsed","JSON","parse","this","prevProps","prevState","setItem","stringify","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7e1ef9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst ImputForm = ({ addContacts }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  function submitContacts(event) {\r\n    event.preventDefault();\r\n    if (name.trim() && number.trim()) {\r\n      addContacts(name, number);\r\n    }\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitContacts} className=\"form-horizontal\">\r\n        <div className=\"container-name\">\r\n          <p>Name</p>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              aria-label=\"Text input with checkbox\"\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={event => setName(event.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n        <div className=\"container-number\">\r\n          <p>Number</p>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              aria-label=\"Text input with checkbox\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона может состоять только из цифр\"\r\n              required\r\n              value={number}\r\n              onChange={event => setNumber(event.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n        <Button className=\"btn-form\" type=\"submit\" variant=\"outline-success\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nImputForm.propTypes = {\r\n  addContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImputForm;\r\n","import PropTypes from \"prop-types\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst Filter = ({ filterContacts }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container-filter\">\r\n        <p>Find contacts name</p>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            aria-label=\"Text input with checkbox\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            onChange={filterContacts}\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Contacts = ({ filter, contacts, removeContacts }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"list-filter\">\r\n        {contacts\r\n          .filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact, index) => (\r\n            <li className=\"item-filter\" key={contact.id}>\r\n              <span className=\"index\">{++index}</span>\r\n              <p className=\"name\">{contact.name}</p>\r\n              <p className=\"number\">{contact.number}</p>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => removeContacts(contact.id)}\r\n                variant=\"outline-danger\"\r\n              >\r\n                Delete\r\n              </Button>{\" \"}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  removeContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ImputForm from \"../ImputForm/ImputForm\";\nimport Filter from \"../Filter/Filter\";\nimport Contacts from \"../Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContacts = (text, value) => {\n    const newContacts = { id: uuidv4(), name: text, number: value };\n    if (\n      this.state.contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      return alert(`Такое имя уже существует`);\n    }\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newContacts],\n    }));\n  };\n\n  filterContacts = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  removeContacts = id => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contacts => contacts.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contactsStorage = localStorage.getItem(\"contacts\");\n    const parsed = JSON.parse(contactsStorage);\n\n    if (parsed) {\n      this.setState({ contacts: parsed });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <div className=\"container\">\n          <h1>Phonebook</h1>\n          <ImputForm addContacts={this.addContacts} />\n          <Filter filterContacts={this.filterContacts} />\n        </div>\n        <h2 className=\"contacts\">Contacts</h2>\n        <div className=\"container-contacts\">\n          {this.state.contacts.length ? (\n            <Contacts\n              contacts={contacts}\n              filter={filter}\n              removeContacts={this.removeContacts}\n            />\n          ) : (\n            <p>No contacts</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componets/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}